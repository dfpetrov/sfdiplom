"""
Django settings for PumpSkill project.

Generated by 'django-admin startproject' using Django 3.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import environ
import socket
import dj_database_url
from django.urls import reverse_lazy
from django.utils.translation import gettext_lazy as _
from .usernameblacklist import USERNAME_BLACKLIST_ALL, USERNAME_BLACKLIST_SHORT


env = environ.Env(
    # DEBUG=(bool, False)
)
environ.Env.read_env()


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', env('SECRET_KEY'))

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(os.environ.get('DJANGO_DEBUG', env('DEBUG', default=True)))

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'django.contrib.sites',

    # Third Party Django Applications
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.github',
    'debug_toolbar',
    
    # Project Applications
    'appaccounts.apps.AppaccountsConfig',
    'apptasks',
    'apporders',
    'appmain',
    'appcourses.apps.AppcoursesConfig',
    'apppermission.apps.ApppermissionConfig',

    'django.contrib.admin',
]


MIDDLEWARE = [
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

SESSION_COOKIE_AGE = 60 * 60 * 24 * 365 * 3  # 3 years

ROOT_URLCONF = 'PumpSkill.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = 'PumpSkill.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

if DEBUG:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': os.environ.get('DB_NAME', env('DB_NAME')),
            'USER': os.environ.get('DB_USER', env('DB_USER')),
            'PASSWORD': os.environ.get('DB_PASSWORD', env('DB_PASSWORD')),
            'HOST': os.environ.get('DB_HOST', env('DB_HOST')),
            'PORT': '',
        }
    }

    import sentry_sdk
    from sentry_sdk.integrations.django import DjangoIntegration

    SENTRY_SECRET_KEY = os.environ.get('SENTRY_SECRET_KEY', env('SENTRY_SECRET_KEY'))

    sentry_sdk.init(
        dsn=SENTRY_SECRET_KEY,
        integrations=[DjangoIntegration()],

        # If you wish to associate users to errors (assuming you are using
        # django.contrib.auth) you may enable sending PII data.
        send_default_pii=True
    )



# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

# from django.utils.translation import ugettext_lazy


LANGUAGES = [
    ('en', _('English')),
    ('ru', _('Russian')),
]

# LANGUAGE_CODE = 'ru'
LANGUAGE_CODE = 'ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = False

USE_TZ = True

# этими переменными и задается формат даты и формат даты-времени
DATE_FORMAT = 'd.m.Y'           # 18.09.2009
DATETIME_FORMAT = 'd b Y'   # 18.09.2009 22:41
TIME_FORMAT = 'H:i'

LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale/'),
)

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "website/assets"),
]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_BACKEND = "sgbackend.SendGridBackend"

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    # 'appaccounts.authentication.EmailAuthBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)

LOGIN_REDIRECT_URL = reverse_lazy('appmain:dashboard')
LOGOUT_REDIRECT_URL = reverse_lazy('appmain:index')
LOGIN_URL = reverse_lazy('appaccounts:login')
LOGOUT_URL = reverse_lazy('appaccounts:logout')

ACCOUNT_AUTHENTICATION_METHOD = 'username_email'
ACCOUNT_EMAIL_CONFIRMATION_AUTHENTICATED_REDIRECT_URL = None
ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS = 2
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_SUBJECT_PREFIX = 'Pump Skill'
ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = True
ACCOUNT_SESSION_REMEMBER = None
ACCOUNT_USERNAME_MIN_LENGTH = 3
if DEBUG:
    ACCOUNT_DEFAULT_HTTP_PROTOCOL = 'http'
else:
    ACCOUNT_DEFAULT_HTTP_PROTOCOL = 'https'

ACCOUNT_USERNAME_BLACKLIST = USERNAME_BLACKLIST_ALL
ACCOUNT_USERNAME_BLACKLIST_SHORT = USERNAME_BLACKLIST_SHORT

GITHUB_APP_ID = os.environ.get('GITHUB_APP_ID', env('GITHUB_APP_ID'))
GITHUB_API_SECRET = os.environ.get('GITHUB_API_SECRET', env('GITHUB_API_SECRET'))

DEFAULT_FROM_EMAIL = "noreply@pumpskill.ru"

SITE_ID = 1

INTERNAL_IPS = [
    '127.0.0.1',
]

SENDGRID_API_KEY = os.environ.get('SENDGRID_API_KEY', env('SENDGRID_API_KEY'))

# Project constants
ORDER_HREF_TITLE_PREFIX = _('Открыть решение задачи')
TASK_HREF_TITLE_PREFIX = _('Открыть задачу')
SKILL_HREF_TITLE_PREFIX = _('Показать все задачи по')
PROFILE_HREF_TITLE_PREFIX = _('Смотреть профайл')
TASK_TITLE_LEN_SHORT = 60
TASK_DESCRIPTION_LEN_SHORT = 120
TASK_DESCRIPTION_LEN_MIN = 50
TASK_DESCRIPTION_LEN_MAX = 5000
ORDER_COMMENT_LEN_MAX = 5000
BASE_CSS_COURSE_PATH = '_base_css_assets_courses.html'
BASE_JS_COURSE_PATH = '_base_js_assets_courses.html'
GROUP_MANAGER = 'manager'
STYLE_LESSON = 'lesson'


PROFILE_DATA_DICT = {
    'profile_id': '',
    'profile_name': '',
    'profile_description': '',
    'profile_avatar': '',
    'profile_url': '',
}

SESSION_USERNAME_KEY = 'username'
SESSION_AUTO_LOGIN_KEY = 'auto_login'
